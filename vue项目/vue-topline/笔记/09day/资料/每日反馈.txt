***	大爱孙老师！！！！！！！！！！！！！！！！！！！！！！
***	希望孙老师讲解一下computed的使用场景，感谢
computed:计算属性
    其声明的成员可以当做data成员进行使用
    但是data成员响应式做的不好(两个组件之间更新不灵)，
    computed有响应式(两个组件之间也是ok的)
    使用场景：
        有的时候页面上要使用一个数据，这个数据是其他许多data的合成体
        在页面上直接表现data的合成体也可以，但是代码比较乱，这时候computed比较适合
        computed:{
            info(){
                return this.a+this.b
            }
        }
        模板中应用：
        {{info}}   // a+b的算术值，如果a或b发生变化，info会重新计算
                   // a和b没有变化并且info被重复使用，其会被"缓存"，使得性能有提高
        {{info}}
        {{info}}

        不用computed实现上述效果
        {{a+b-c+d*f}}  // 代码可以运行，但是可读性太差
